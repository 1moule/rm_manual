rm_manual:
  robot_type: "standard"
  chassis:
    topic: "/cmd_chassis"
    accel_x: 10.0
    accel_y: 10.0
    accel_z: 20.0
    safety_power: 50.0
    capacitor_threshold: 0.1
    charge_power: 20
    extra_power: 30
    burst_power: 220
  vel:
    topic: "/cmd_vel"
    max_linear_x: 4.0
    max_linear_y: 4.0
    max_angular_z: 10.0
  gimbal:
    topic: "/cmd_gimbal"
    max_yaw_vel: 12.56
    max_pitch_vel: 8.37
    track_timeout: 0.5
    target_cost_function:
      k_pos: 1.0
      k_vel: 1.0
      k_hp: 1.0
      k_freq: 1.0
      timeout: 0.05
  shooter:
    topic: "/cmd_shoot"
    gimbal_error_limit: 0.05
    heat_limit:
      expect_shoot_frequency_1: 5
      expect_shoot_frequency_2: 8
      expect_shoot_frequency_3: 12
      burst_shoot_frequency: 20
      safe_shoot_frequency: 5
      heat_coeff: 8.0
      type: "ID1_17MM"
  cover:
    topic: "/controllers/cover_controller/command"
    open_pos: -2.0
    close_pos: 0.0
  detection_switch:
    fail_limit: 10

  controllers_list:
    state_controllers:
      - controllers/robot_state_controller
      - controllers/joint_state_controller
    main_controllers:
      - controllers/chassis_controller
      - controllers/gimbal_controller
      - controllers/shooter_controller
      - controllers/cover_controller
    calibration_controllers:
      - controllers/trigger_calibration_controller
      - controllers/cover_calibration_controller

  cover_calibration:
    - start_controller: controllers/cover_calibration_controller
      stop_controller: controllers/cover_controller
      service_name: /controllers/cover_calibration_controller/is_calibrated
  trigger_calibration:
    - start_controller: controllers/trigger_calibration_controller
      stop_controller: controllers/shooter_controller
      service_name: /controllers/trigger_calibration_controller/is_calibrated
  ui:
    title:
      - { name: "chassis", data: { type: "string", id: 0, start_x: 250, start_y: 800, start_angle: 15, width: 3, color: "white", content: "chassis:" } }
      - { name: "gimbal", data: { type: "string", id: 1, start_x: 250, start_y: 750, start_angle: 15, width: 3, color: "white", content: "gimbal:" } }
      - { name: "shooter", data: { type: "string", id: 2, start_x: 250, start_y: 700, start_angle: 15, width: 3, color: "white", content: "shooter:" } }
      - { name: "target", data: { type: "string", id: 3, start_x: 250, start_y: 650, start_angle: 15, width: 3, color: "white", content: "target:" } }
    warning:
      - { name: "spin", data: { type: "string", id: 4, start_x: 900, start_y: 700, start_angle: 15, width: 3, color: "yellow", content: "please spin!!" } }
      - { name: "cover", data: { type: "string", id: 5, start_x: 900, start_y: 750, start_angle: 15, width: 3, color: "green", content: "cover open!!" } }
      - { name: "armor0", data: { type: "circle", id: 11, width: 3, color: "yellow" } }
      - { name: "armor1", data: { type: "circle", id: 12, width: 3, color: "yellow" } }
      - { name: "armor2", data: { type: "circle", id: 13, width: 3, color: "yellow" } }
      - { name: "armor3", data: { type: "circle", id: 14, width: 3, color: "yellow" } }
    state:
      - { name: "chassis", data: { type: "string", id: 7, start_x: 450, start_y: 800, start_angle: 15, width: 3 } }
      - { name: "gimbal", data: { type: "string", id: 8, start_x: 450, start_y: 750, start_angle: 15, width: 3 } }
      - { name: "shooter", data: { type: "string", id: 9, start_x: 450, start_y: 700, start_angle: 15, width: 3 } }
      - { name: "target", data: { type: "string", id: 10, start_x: 450, start_y: 650, start_angle: 15, width: 3 } }
    aim:
      - { name: "3m", data: { type: "line", id: 15, start_x: [ 1, 1, 1, 1 ], start_y: [ 1, 1, 1, 1 ] } }
    capacitor:
      - { name: "capacitor", data: { type: "string", id: 6, start_x: 900, start_y: 100, start_angle: 15, width: 3 } }
controllers:
  cover_controller:
    type: effort_controllers/JointPositionController
    joint: "cover_joint"
    pid: { p: 15.0, i: 0.0, d: 1.2, i_clamp_max: 0.0, i_clamp_min: 0.0, antiwindup: true, publish_state: true }